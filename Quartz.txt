                                                              Quartz
    
Quartz开发的大致流程：                                                          
	1.maven引入Quartz 的jar包
	2.获取实例 scheduler
	3.创建一个要执行的任务
	4.把任务加载到JobDeteil中
	5.通过触发器 trigger   通过调度 scheduler.schedulerJob(job,trigger);   


Quartz的运行环境
		1.可以运行嵌入在另一个独立式应用程序
		2.可以在应用程序服务器（或servlet容器内）被实例化，并且参与事务
		3.可以作为独立的程序运行（其自己的Java虚拟机内），可以通过RMI使用
		4.可以被实例化，作为独立的项目集群（负载均衡和故障转移功能），用于作业的执行 
		
		
Quartz的三个核心组件 
		1.job             (要执行的任务)
		2.trigger        (触发器)
		3.scheduler    (调度器)
		
		
JobExecutionContext
JobDateMap

有状态和无状态job
有状态Job需要在job类上加一个注解 @PersistJobDataAfterExection

触发器 trigger
TriggerBuilder-->
		new Trigger()-->
				AbstractTrigger-->
						1.DailyTimeIntervalTriggerImpl
						2.CalaendarIntervalTriggerImpl
						3.SimpleTriggerImpl
						4.CronTriggerImpl
						
						jobKey:表示job实例的标识，触发器被触发时，该指定的job实例会被执行
						startTime:表示触发器的时间表，第一次开始被触发的时间，数据类型是java.util.Date
						endTime:指定触发器种植被触发的时间，数据类型是java.util.Date
						
						jobKey,startTime,endTime这三个变量都可以通过JobExecutionContext  context来获取
						
						可以把startTime  endTime设置到Trigger对象中，使调度任务可以灵活调用
						